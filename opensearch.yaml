version: '3'
services:
  opensearch-hot-node1: # This is also the hostname of the container within the Docker network (i.e. https://opensearch-node1/)
    image: opensearchproject/opensearch:2.5.0 # Specifying the 2.5.0 available image - modify if you want a specific version
    container_name: opensearch-hot-node1
    environment:
      - cluster.name=opensearch-cluster # Name the cluster
      - node.name=opensearch-hot-node1 # Name the node that will run in this container
      - node.attr.temp=hot
      - discovery.seed_hosts=opensearch-hot-node1,opensearch-hot-node2,opensearch-hot-node3,opensearch-warm-node1,opensearch-warm-node2,opensearch-warm-node3,opensearch-cold-node1,opensearch-cold-node2,opensearch-cold-node3 # Nodes to look for when discovering the cluster
      - cluster.initial_cluster_manager_nodes=opensearch-hot-node1,opensearch-hot-node2,opensearch-hot-node3 # Nodes eligible to serve as cluster manager
      - bootstrap.memory_lock=true # Disable JVM heap memory swapping
      - "path.repo=/mnt/snapshots"
      - "OPENSEARCH_JAVA_OPTS=-Xms512m -Xmx512m" # Set min and max JVM heap sizes to at least 50% of system RAM
    ulimits:
      memlock:
        soft: -1 # Set memlock to unlimited (no soft or hard limit)
        hard: -1
      nofile:
        soft: 65536 # Maximum number of open files for the opensearch user - set to at least 65536
        hard: 65536
    volumes:
      - opensearch-hot-data1:/usr/share/opensearch/data # Creates volume called opensearch-data1 and mounts it to the container
      - opensearch-snapshots:/mnt/snapshots
    ports:
      - 9200:9200 # REST API
      - 9600:9600 # Performance Analyzer
    networks:
      - opensearch-net # All of the containers will join the same Docker bridge network
  opensearch-hot-node2: # This is also the hostname of the container within the Docker network (i.e. https://opensearch-node1/)
    image: opensearchproject/opensearch:2.5.0 # Specifying the 2.5.0 available image - modify if you want a specific version
    container_name: opensearch-hot-node2
    environment:
      - cluster.name=opensearch-cluster # Name the cluster
      - node.name=opensearch-hot-node2 # Name the node that will run in this container
      - node.attr.temp=hot
      - discovery.seed_hosts=opensearch-hot-node1,opensearch-hot-node2,opensearch-hot-node3,opensearch-warm-node1,opensearch-warm-node2,opensearch-warm-node3,opensearch-cold-node1,opensearch-cold-node2,opensearch-cold-node3 # Nodes to look for when discovering the cluster
      - cluster.initial_cluster_manager_nodes=opensearch-hot-node1,opensearch-hot-node2,opensearch-hot-node3 # Nodes eligible to serve as cluster manager
      - bootstrap.memory_lock=true # Disable JVM heap memory swapping
      - "path.repo=/mnt/snapshots"
      - "OPENSEARCH_JAVA_OPTS=-Xms512m -Xmx512m" # Set min and max JVM heap sizes to at least 50% of system RAM
    ulimits:
      memlock:
        soft: -1 # Set memlock to unlimited (no soft or hard limit)
        hard: -1
      nofile:
        soft: 65536 # Maximum number of open files for the opensearch user - set to at least 65536
        hard: 65536
    volumes:
      - opensearch-hot-data2:/usr/share/opensearch/data # Creates volume called opensearch-data1 and mounts it to the container
      - opensearch-snapshots:/mnt/snapshots
    networks:
      - opensearch-net # All of the containers will join the same Docker bridge network
  opensearch-hot-node3: # This is also the hostname of the container within the Docker network (i.e. https://opensearch-node1/)
    image: opensearchproject/opensearch:2.5.0 # Specifying the 2.5.0 available image - modify if you want a specific version
    container_name: opensearch-hot-node3
    environment:
      - cluster.name=opensearch-cluster # Name the cluster
      - node.name=opensearch-hot-node3 # Name the node that will run in this container
      - node.attr.temp=hot
      - discovery.seed_hosts=opensearch-hot-node1,opensearch-hot-node2,opensearch-hot-node3,opensearch-warm-node1,opensearch-warm-node2,opensearch-warm-node3,opensearch-cold-node1,opensearch-cold-node2,opensearch-cold-node3 # Nodes to look for when discovering the cluster
      - cluster.initial_cluster_manager_nodes=opensearch-hot-node1,opensearch-hot-node2,opensearch-hot-node3 # Nodes eligible to serve as cluster manager
      - bootstrap.memory_lock=true # Disable JVM heap memory swapping
      - "path.repo=/mnt/snapshots"
      - "OPENSEARCH_JAVA_OPTS=-Xms512m -Xmx512m" # Set min and max JVM heap sizes to at least 50% of system RAM
    ulimits:
      memlock:
        soft: -1 # Set memlock to unlimited (no soft or hard limit)
        hard: -1
      nofile:
        soft: 65536 # Maximum number of open files for the opensearch user - set to at least 65536
        hard: 65536
    volumes:
      - opensearch-hot-data3:/usr/share/opensearch/data # Creates volume called opensearch-data1 and mounts it to the container
      - opensearch-snapshots:/mnt/snapshots
    networks:
      - opensearch-net # All of the containers will join the same Docker bridge network
  opensearch-warm-node1: # This is also the hostname of the container within the Docker network (i.e. https://opensearch-node1/)
    image: opensearchproject/opensearch:2.5.0 # Specifying the 2.5.0 available image - modify if you want a specific version
    container_name: opensearch-warm-node1
    environment:
      - cluster.name=opensearch-cluster # Name the cluster
      - node.name=opensearch-warm-node1 # Name the node that will run in this container
      - node.attr.temp=warm
      - node.roles=data,ingest
      - discovery.seed_hosts=opensearch-hot-node1,opensearch-hot-node2,opensearch-hot-node3,opensearch-warm-node1,opensearch-warm-node2,opensearch-warm-node3,opensearch-cold-node1,opensearch-cold-node2,opensearch-cold-node3 # Nodes to look for when discovering the cluster
      - cluster.initial_cluster_manager_nodes=opensearch-hot-node1,opensearch-hot-node2,opensearch-hot-node3 # Nodes eligible to serve as cluster manager
      - bootstrap.memory_lock=true # Disable JVM heap memory swapping
      - "path.repo=/mnt/snapshots"
      - "OPENSEARCH_JAVA_OPTS=-Xms512m -Xmx512m" # Set min and max JVM heap sizes to at least 50% of system RAM
    ulimits:
      memlock:
        soft: -1 # Set memlock to unlimited (no soft or hard limit)
        hard: -1
      nofile:
        soft: 65536 # Maximum number of open files for the opensearch user - set to at least 65536
        hard: 65536
    volumes:
      - opensearch-warm-data1:/usr/share/opensearch/data # Creates volume called opensearch-data1 and mounts it to the container
      - opensearch-snapshots:/mnt/snapshots
    networks:
      - opensearch-net # All of the containers will join the same Docker bridge network
  opensearch-warm-node2: # This is also the hostname of the container within the Docker network (i.e. https://opensearch-node1/)
    image: opensearchproject/opensearch:2.5.0 # Specifying the 2.5.0 available image - modify if you want a specific version
    container_name: opensearch-warm-node2
    environment:
      - cluster.name=opensearch-cluster # Name the cluster
      - node.name=opensearch-warm-node2 # Name the node that will run in this container
      - node.attr.temp=warm
      - node.roles=data,ingest
      - discovery.seed_hosts=opensearch-hot-node1,opensearch-hot-node2,opensearch-hot-node3,opensearch-warm-node1,opensearch-warm-node2,opensearch-warm-node3,opensearch-cold-node1,opensearch-cold-node2,opensearch-cold-node3 # Nodes to look for when discovering the cluster
      - cluster.initial_cluster_manager_nodes=opensearch-hot-node1,opensearch-hot-node2,opensearch-hot-node3 # Nodes eligible to serve as cluster manager
      - bootstrap.memory_lock=true # Disable JVM heap memory swapping
      - "path.repo=/mnt/snapshots"
      - "OPENSEARCH_JAVA_OPTS=-Xms512m -Xmx512m" # Set min and max JVM heap sizes to at least 50% of system RAM
    ulimits:
      memlock:
        soft: -1 # Set memlock to unlimited (no soft or hard limit)
        hard: -1
      nofile:
        soft: 65536 # Maximum number of open files for the opensearch user - set to at least 65536
        hard: 65536
    volumes:
      - opensearch-warm-data2:/usr/share/opensearch/data # Creates volume called opensearch-data1 and mounts it to the container
      - opensearch-snapshots:/mnt/snapshots
    networks:
      - opensearch-net # All of the containers will join the same Docker bridge network
  opensearch-warm-node3: # This is also the hostname of the container within the Docker network (i.e. https://opensearch-node1/)
    image: opensearchproject/opensearch:2.5.0 # Specifying the 2.5.0 available image - modify if you want a specific version
    container_name: opensearch-warm-node3
    environment:
      - cluster.name=opensearch-cluster # Name the cluster
      - node.name=opensearch-warm-node3 # Name the node that will run in this container
      - node.attr.temp=warm
      - node.roles=data,ingest
      - discovery.seed_hosts=opensearch-hot-node1,opensearch-hot-node2,opensearch-hot-node3,opensearch-warm-node1,opensearch-warm-node2,opensearch-warm-node3,opensearch-cold-node1,opensearch-cold-node2,opensearch-cold-node3 # Nodes to look for when discovering the cluster
      - cluster.initial_cluster_manager_nodes=opensearch-hot-node1,opensearch-hot-node2,opensearch-hot-node3 # Nodes eligible to serve as cluster manager
      - bootstrap.memory_lock=true # Disable JVM heap memory swapping
      - "path.repo=/mnt/snapshots"
      - "OPENSEARCH_JAVA_OPTS=-Xms512m -Xmx512m" # Set min and max JVM heap sizes to at least 50% of system RAM
    ulimits:
      memlock:
        soft: -1 # Set memlock to unlimited (no soft or hard limit)
        hard: -1
      nofile:
        soft: 65536 # Maximum number of open files for the opensearch user - set to at least 65536
        hard: 65536
    volumes:
      - opensearch-warm-data3:/usr/share/opensearch/data # Creates volume called opensearch-data1 and mounts it to the container
      - opensearch-snapshots:/mnt/snapshots
    networks:
      - opensearch-net # All of the containers will join the same Docker bridge network
  opensearch-cold-node1: # This is also the hostname of the container within the Docker network (i.e. https://opensearch-node1/)
    image: opensearchproject/opensearch:2.5.0 # Specifying the 2.5.0 available image - modify if you want a specific version
    container_name: opensearch-cold-node1
    environment:
      - cluster.name=opensearch-cluster # Name the cluster
      - node.name=opensearch-cold-node1 # Name the node that will run in this container
      - node.attr.temp=cold
      - node.roles=data,ingest
      - discovery.seed_hosts=opensearch-hot-node1,opensearch-hot-node2,opensearch-hot-node3,opensearch-warm-node1,opensearch-warm-node2,opensearch-warm-node3,opensearch-cold-node1,opensearch-cold-node2,opensearch-cold-node3 # Nodes to look for when discovering the cluster
      - cluster.initial_cluster_manager_nodes=opensearch-hot-node1,opensearch-hot-node2,opensearch-hot-node3 # Nodes eligible to serve as cluster manager
      - bootstrap.memory_lock=true # Disable JVM heap memory swapping
      - "path.repo=/mnt/snapshots"
      - "OPENSEARCH_JAVA_OPTS=-Xms512m -Xmx512m" # Set min and max JVM heap sizes to at least 50% of system RAM
    ulimits:
      memlock:
        soft: -1 # Set memlock to unlimited (no soft or hard limit)
        hard: -1
      nofile:
        soft: 65536 # Maximum number of open files for the opensearch user - set to at least 65536
        hard: 65536
    volumes:
      - opensearch-cold-data1:/usr/share/opensearch/data # Creates volume called opensearch-data1 and mounts it to the container
      - opensearch-snapshots:/mnt/snapshots
    networks:
      - opensearch-net # All of the containers will join the same Docker bridge network
  opensearch-cold-node2: # This is also the hostname of the container within the Docker network (i.e. https://opensearch-node1/)
    image: opensearchproject/opensearch:2.5.0 # Specifying the 2.5.0 available image - modify if you want a specific version
    container_name: opensearch-cold-node2
    environment:
      - cluster.name=opensearch-cluster # Name the cluster
      - node.name=opensearch-cold-node2 # Name the node that will run in this container
      - node.attr.temp=cold
      - node.roles=data,ingest
      - discovery.seed_hosts=opensearch-hot-node1,opensearch-hot-node2,opensearch-hot-node3,opensearch-warm-node1,opensearch-warm-node2,opensearch-warm-node3,opensearch-cold-node1,opensearch-cold-node2,opensearch-cold-node3 # Nodes to look for when discovering the cluster
      - cluster.initial_cluster_manager_nodes=opensearch-hot-node1,opensearch-hot-node2,opensearch-hot-node3 # Nodes eligible to serve as cluster manager
      - bootstrap.memory_lock=true # Disable JVM heap memory swapping
      - "path.repo=/mnt/snapshots"
      - "OPENSEARCH_JAVA_OPTS=-Xms512m -Xmx512m" # Set min and max JVM heap sizes to at least 50% of system RAM
    ulimits:
      memlock:
        soft: -1 # Set memlock to unlimited (no soft or hard limit)
        hard: -1
      nofile:
        soft: 65536 # Maximum number of open files for the opensearch user - set to at least 65536
        hard: 65536
    volumes:
      - opensearch-cold-data2:/usr/share/opensearch/data # Creates volume called opensearch-data1 and mounts it to the container
      - opensearch-snapshots:/mnt/snapshots
    networks:
      - opensearch-net # All of the containers will join the same Docker bridge network
  opensearch-cold-node3: # This is also the hostname of the container within the Docker network (i.e. https://opensearch-node1/)
    image: opensearchproject/opensearch:2.5.0 # Specifying the 2.5.0 available image - modify if you want a specific version
    container_name: opensearch-cold-node3
    environment:
      - cluster.name=opensearch-cluster # Name the cluster
      - node.name=opensearch-cold-node3 # Name the node that will run in this container
      - node.attr.temp=cold
      - node.roles=data,ingest
      - discovery.seed_hosts=opensearch-hot-node1,opensearch-hot-node2,opensearch-hot-node3,opensearch-warm-node1,opensearch-warm-node2,opensearch-warm-node3,opensearch-cold-node1,opensearch-cold-node2,opensearch-cold-node3 # Nodes to look for when discovering the cluster
      - cluster.initial_cluster_manager_nodes=opensearch-hot-node1,opensearch-hot-node2,opensearch-hot-node3 # Nodes eligible to serve as cluster manager
      - bootstrap.memory_lock=true # Disable JVM heap memory swapping
      - "path.repo=/mnt/snapshots"
      - "OPENSEARCH_JAVA_OPTS=-Xms512m -Xmx512m" # Set min and max JVM heap sizes to at least 50% of system RAM
    ulimits:
      memlock:
        soft: -1 # Set memlock to unlimited (no soft or hard limit)
        hard: -1
      nofile:
        soft: 65536 # Maximum number of open files for the opensearch user - set to at least 65536
        hard: 65536
    volumes:
      - opensearch-cold-data3:/usr/share/opensearch/data # Creates volume called opensearch-data1 and mounts it to the container\
      - opensearch-snapshots:/mnt/snapshots
    networks:
      - opensearch-net # All of the containers will join the same Docker bridge network
  opensearch-dashboards:
    image: opensearchproject/opensearch-dashboards:2.5.0 # Make sure the version of opensearch-dashboards matches the version of opensearch installed on other nodes
    container_name: opensearch-dashboards
    ports:
      - 5601:5601 # Map host port 5601 to container port 5601
    expose:
      - "5601" # Expose port 5601 for web access to OpenSearch Dashboards
    environment:
      OPENSEARCH_HOSTS: '["https://opensearch-hot-node1:9200","https://opensearch-hot-node2:9200","https://opensearch-hot-node3:9200"]' # Define the OpenSearch nodes that OpenSearch Dashboards will query
    networks:
      - opensearch-net

volumes:
  opensearch-hot-data1:
  opensearch-hot-data2:
  opensearch-hot-data3:
  opensearch-warm-data1:
  opensearch-warm-data2:
  opensearch-warm-data3:
  opensearch-cold-data1:
  opensearch-cold-data2:
  opensearch-cold-data3:
  opensearch-snapshots:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /opensearch/snapshots

networks:
  opensearch-net: